// Discrete trait evolution model (PhyloSpec-aligned)
// This example demonstrates a model for the evolution of a discrete trait
// (geographic location) along with sequence evolution.

// --- Substitution Model for Sequence Data ---

// GTR substitution model
Simplex baseFreqs ~ Dirichlet(alpha=[1.0, 1.0, 1.0, 1.0]);
Vector<PositiveReal> rateParams ~ Vector<Exponential>(
  rate=10.0,
  dimension=6
);

QMatrix seqModel = GTR(
  rateMatrix=rateParams, 
  baseFrequencies=baseFreqs
);

// --- Tree Prior ---

// Birth-death parameters
PositiveReal birthRate ~ Exponential(rate=10.0);
PositiveReal deathRate ~ Exponential(rate=20.0);

// Create birth-death tree
Tree phylogeny ~ BirthDeath(
  birthRate=birthRate, 
  deathRate=deathRate
);

// --- Trait Evolution Model ---

// Define possible geographic regions
Vector<String> regions = ["Africa", "Asia", "Europe", "North_America"];

// Asymmetric transition rates between regions
Matrix<PositiveReal> qMatrix ~ CTMCRateMatrix(
  dimension=4,
  prior=Exponential(rate=10.0)
);

// Trait substitution model
QMatrix traitModel = DiscreteTrait(
  states=regions,
  rateMatrix=qMatrix
);

// --- Trait Data ---

// Simulate trait evolution
Alignment<String> geoTraits ~ DiscreteTraitPhyloCTMC(
  tree=phylogeny,
  Q=traitModel
);

// --- Sequence Data ---

// Create phylogenetic CTMC model for sequences
Alignment<Nucleotide> sequences ~ PhyloCTMC(
  tree=phylogeny, 
  Q=seqModel
);

// --- Data Loading ---

// Observe trait data
geoTraits observe [
  "taxon1" = "Africa",
  "taxon2" = "Africa",
  "taxon3" = "Asia",
  "taxon4" = "Asia",
  "taxon5" = "Asia",
  "taxon6" = "Europe",
  "taxon7" = "Europe",
  "taxon8" = "Europe",
  "taxon9" = "North_America",
  "taxon10" = "North_America",
  "taxon11" = "Africa",
  "taxon12" = "Asia",
  "taxon13" = "Asia",
  "taxon14" = "Europe",
  "taxon15" = "North_America",
  "taxon16" = "North_America",
  "taxon17" = "Asia",
  "taxon18" = "Europe",
  "taxon19" = "Europe",
  "taxon20" = "North_America"
];

// Observe sequence data from file
sequences observe from "data/virus_sequences.fasta";

// Add constraint that birth rate exceeds death rate
constraint bdConstraint = GreaterThan(
  left=birthRate, 
  right=deathRate
);